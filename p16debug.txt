gcc -g p16.c -lm
 gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) b main
Breakpoint 1 at 0xb2a: file p16.c, line 60.
(gdb) r
Starting program: /home/runner/TwoProgramsadayassignment/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p16.c:60
60  {
(gdb) n
63    x=input_polygon(x,&p);
(gdb) s
input_polygon (n=0, p=0x7fffba1aa870) at p16.c:30
30    p->n=input_n();
(gdb) n
enter the number of sides
3
31    return n;
(gdb) p n
$1 = 0
(gdb) n
32  }
(gdb) n
main () at p16.c:64
64    find_perimeter(&p);
(gdb) s
find_perimeter (p=0x7fffba1aa870) at p16.c:49
49    input_n_lines(p->n,p->l);
(gdb) n
Enter the first and second coordinate
1
2
3
4
Enter the first and second coordinate
34
56
2
3
Enter the first and second coordinate
2
3
5
6
50    p->perimeter=0;
(gdb) n
51    for(int i=0;i<p->n;i++)
(gdb) n
52      { p->perimeter=p->perimeter+sqrt(pow((p->l[i].p2.x)-(p->l[i].p1.x),2)+pow((p->l[i].p2.y)-(p->l[i].p1.y),2));
(gdb) n
51    for(int i=0;i<p->n;i++)
(gdb) n
52      { p->perimeter=p->perimeter+sqrt(pow((p->l[i].p2.x)-(p->l[i].p1.x),2)+pow((p->l[i].p2.y)-(p->l[i].p1.y),2));
(gdb) n
51    for(int i=0;i<p->n;i++)
(gdb) n
52      { p->perimeter=p->perimeter+sqrt(pow((p->l[i].p2.x)-(p->l[i].p1.x),2)+pow((p->l[i].p2.y)-(p->l[i].p1.y),2));
(gdb) n
51    for(int i=0;i<p->n;i++)
(gdb) n
54  }
(gdb) n
main () at p16.c:65
65    output(p);
(gdb) n
The perimeter is 68.982292
66    return 0;
(gdb) c
Continuing.
[Inferior 1 (process 277) exited normally]
(gdb) q
 
